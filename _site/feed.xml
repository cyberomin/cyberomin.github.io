<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Celestine Omin</title>
    <description>On Software, life and everything in-between
</description>
    <link>http://cyberomin.github.io/</link>
    <atom:link href="http://cyberomin.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 19 Jun 2015 23:53:13 +0100</pubDate>
    <lastBuildDate>Fri, 19 Jun 2015 23:53:13 +0100</lastBuildDate>
    <generator>Jekyll v2.0.3</generator>
    
      <item>
        <title>RouteSMS over HTTP</title>
        <description>&lt;p&gt;
If you have ever worked with RouteSMS' HTTP API, I am sure you probably have ran into this same issue. About 5 months ago, my company, &lt;a href=&quot;http://konga.com&quot; target=&quot;_blank&quot;&gt;Konga&lt;/a&gt; made the move to consolidate its messaging needs. This move was necessary as different projects had common needs and SMS notification was part of it. SMS notification is at the core of Konga.
&lt;/p&gt;

&lt;p&gt; As a member of the team that was saddled with the responsibility of building a consolidated messaging/notification system, part of my responsibility was working on the SMS segment of the project. &lt;/p&gt;

&lt;p&gt;We use RouteSMS, but unfortunately, RouteSMS does not have any official library for its API. This became apparent after spending a couple of hours googling for a suitable library.&lt;/p&gt;

&lt;p&gt;I took it upon myself to write a simple library that will ease my pain of communicating with their API. Today, I'm making this public with the hope that someone else will find this useful.
&lt;/p&gt;

&lt;p&gt;Here is the GitHub repo for the library - &lt;a href=&quot;https://github.com/cyberomin/RouteSMS&quot; target=&quot;_blank&quot;&gt;
https://github.com/cyberomin/RouteSMS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
    PS: RouteSMS is an awesome company and I love their services. They are one of the most proactive companies I know.
    &lt;br/&gt;&lt;em&gt;This is &lt;strong&gt;NOT&lt;/strong&gt; an advert.&lt;/em&gt;
&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Jun 2015 06:30:00 +0100</pubDate>
        <link>http://cyberomin.github.io/routesms/2015/06/17/route-sms.html</link>
        <guid isPermaLink="true">http://cyberomin.github.io/routesms/2015/06/17/route-sms.html</guid>
        
        
        <category>routesms</category>
        
      </item>
    
      <item>
        <title>Tech in 2014 and Beyond</title>
        <description>&lt;p&gt;
So, 2014 has come and gone and the year will forever hold a special place in our hearts.
In 2014, we saw an explosion in wearable technologies: watches, fitness tracker and motion sensor.
Companies like FitBit and Jawbone made giant leaps in these areas with the introduction of their fitness bands. Samsung, LG, Apple and her ilks made good on smart watches. Google scooped Nest, the home thermostat maker in a deal worth well over $3B. Google also solidified its position with Glass.
&lt;/p&gt;

&lt;p&gt;
While 2014 was awesome for some, it didn't quite augur well for the vast majority of others.
Hackers and script kiddies alike dealt heavy blows on some companies, from Ebay to Target, Sony to Adobe.
Even SnapChat. While some companies got a fore knowledge of what was to come, some got caught totally unprepared. Both Symantec and LookOut - a mobile security company predicts that these kinds of attacks will even be more widespread come 2015.
&lt;/p&gt;

&lt;p&gt;One of the major buzz in technology last year was that of Big Data, companies both large and small are beginning to see the need for Big Data and engineers who understand this turf very well are in high demand. LinkedIn, Facebook, Twitter, Amazon, etc are all investing millions of dollars into this space so as to enable them make sense of all the data we have all willingly thrown at them. The Ebola scourge was already picked weeks before it became a major epidemic. LinkedIn and Facebook are making more intelligent decision based on our network just from the data we hand to them.
&lt;/p&gt;

&lt;p&gt;
In a Harvard Business Review feature article, the author had this to say &lt;blockquote&gt;&lt;p&gt;&quot;demand [for data scientists] has raced ahead of supply. Indeed, the shortage of data scientists is becoming a serious constraint in some sectors.&quot;&lt;/p&gt; 
&lt;footer&gt;&lt;cite title=&quot;Source Title&quot;&gt;
&lt;a href=&quot;https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century/&quot;&gt;Harvard Business Review&lt;/a&gt; - October, 2012.&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;/p&gt;

&lt;p&gt;The World Economic Forum classifies data as an asset and places it in the same economic class of Gold and Crude.&lt;/p&gt;

&lt;p&gt;2014 could also pass as the year of the sharing economy, Uber,Lyft and AirBnB led the charge this year.

Reminding us that we don't necessarily need to own our cars and houses in other to enjoy the luxuries that comes with them.

The sharing economy is here to stay.
&lt;/p&gt;

&lt;p&gt;
In 2014 we saw breakout successes for some companies that went public.
Notably, the Chinese Internet behemoth, Alibaba, went public in 2014 and raised what has become the largest amount of money by any public company - $24B.

Twitter also did go Public this year and so far Wall Street has been nice to her.

Uber raised an insane amount of money from VCs, approximately $3B with a staggering $40B valuation.

Tencent, the third member of China's oligopoly splashing $600M on Travis' baby.

The company currently operates in over 100 cities around the world. Amidst the bumpy ride, Uber seems to be on a roll.
The Samwers; Oliver, Marc and Alexander took their Rocket Internet, an infamous clone factory,  public in Berlin.
&lt;/p&gt;

&lt;p&gt;We also saw strong signals coming in from Asia, Flipkart raised almost $2B at a valuation of $11B, Masayoshi Son's SoftBank, flushed with fresh money from Alibaba's IPO is already investing in India's Ola cabs a Uber-esque service poised to give Uber a run for her money in their home turf. Snapdeal also got in on the show too.&lt;/p&gt;

&lt;p&gt;Cloud computing is here to stay, though the three major players; Amazon, Google and Microsoft will continue to battle for supremacy, under dogs like Digital Ocean, Linode, Rackspace and her likes will continue to carter to the long tail.&lt;/p&gt;

&lt;p&gt;There was so much charter about diversity.

Different interest group spoke about the need to have a uniform or balanced diversity ratio.

Female tech powerhouse like Sheryll Sandberg are already leading the cause.
&lt;/p&gt;

&lt;p&gt;In the local scene here, a lot has been seen in the consumer Internet space.

eCommerce companies across different verticals seems to have had it smooth last year, from hotel booking, deal site, marketplaces, mobile money, etc.

With the entrants of PayPal and Uber, one can really hope for the best.
The coming of these companies is a testament to the fact that our market is grown and a validation of what we have to offer.

Konga and Jumia seems to be the breakaway success in the eCommerce space. 

Both companies raising over $100M cumulatively and employing over 1,500 persons between them.

It is also good to point that both companies are barely 3yrs old.&lt;/p&gt;

&lt;p&gt;Konga as a company has enjoyed tremendous success, with her recent Yakata sales, an equivalent of the world renowned Black Friday, she made sales worth N600M ($3.45m) approximately.

Indeed 2014 was a great year but 2015 is going to be a lot more awesome.&lt;/p&gt;

&lt;p&gt;eCommerce will continue to be on the rise with companies now having strong footholds in niche market; Fashion, babies and beauty. Ultimately what will separate the boys from the men in 2015 will be strategy not just pricing and marketing. As Peter Thiel would say, transcend not compete. Transcend…..so we watch out for those that will transcend.&lt;/p&gt;

&lt;p&gt;More money will flow into the consumer Internet space with local VCs and PE firms taking part in this pie.

We might see one exit/acquisition or some form of consolidation.

Traditional companies will look for ways to diversify, the MTN/AIH deal has already shown us what is possible.

Traditional institutions will be shaken up to the point of disruption.&lt;/p&gt;

&lt;p&gt;The growth of mobile will only continue to go North, with efforts from Google (Android One) and Facebook's Internet.org, we can only expect the best.&lt;/p&gt;

&lt;p&gt;While logistics and Payment is still a major factor affecting ecommerce, more companies will emerge to tackle this specific problems.&lt;/p&gt;

&lt;p&gt;We will cross our fingers and hope to see what 2015 has in-store.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2015 02:55:00 +0100</pubDate>
        <link>http://cyberomin.github.io/technology/startups/predictions/2015/05/03/tech-in-2014-and-beyond.html</link>
        <guid isPermaLink="true">http://cyberomin.github.io/technology/startups/predictions/2015/05/03/tech-in-2014-and-beyond.html</guid>
        
        
        <category>technology</category>
        
        <category>startups</category>
        
        <category>predictions</category>
        
      </item>
    
      <item>
        <title>Divideby2 Algorithm - Decimal to Binary converter</title>
        <description>&lt;p&gt;Binary (1&amp;#39;s and 0&amp;#39;s), popularly called base-2 (2&lt;sup&gt;n&lt;/sup&gt;) is the core of how computers work. Without it, computers would probably not exist.&lt;/p&gt;

&lt;p&gt;According to Wikipedia?
&lt;blockquote&gt;
    A binary number is a number expressed in the binary numeral system, or base-2 numeral system, which represents numeric values using two different symbols: typically 0 (zero) and 1 (one).
    &lt;footer&gt;Source &lt;cite title=&quot;Source Title&quot;&gt;Wikepedia&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;As humans we have been taught the decimal system otherwise knowmnas base-10 (10&lt;sup&gt;n&lt;/sup&gt;). This is the basis
with which we represent numbers - 0,1,2,3...9.&lt;/p&gt;

&lt;p&gt;Recently I have the taken time to go back to the fundamentals of Computer Science. Data Structures and
Algorithm is one part that has been of particular interest. I thought about writing an algorithm that will
help me convert with ease from one base to the other. I have decided to start with decimal to binary.&lt;/p&gt;

&lt;p&gt;I whiped out an algorithm in Python to solve this problem -&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;remainderDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;binaryConvet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;remStack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remainderDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;remStack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;remStack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remStack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remStack&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I basically wrote two functions for abstraction sake. &lt;code&gt;remainderDiv&lt;/code&gt; does two things;
get a number, perfom an integer division and modulus on the number. &lt;/p&gt;

&lt;p&gt;The second function &lt;code&gt;binaryConvet&lt;/code&gt; takes a number and calls &lt;code&gt;remainderDiv&lt;/code&gt; iteratively
and it stores the remainder in a list. After the iteration is complete, I do a reversal on the list. With that,
I have my own home grown binary converter :-).&lt;/p&gt;

&lt;p&gt;Thank you for reading.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Aug 2014 17:19:14 +0100</pubDate>
        <link>http://cyberomin.github.io/binary/algorithms/2014/08/14/divideby2-deimal-to-binary-convereter.html</link>
        <guid isPermaLink="true">http://cyberomin.github.io/binary/algorithms/2014/08/14/divideby2-deimal-to-binary-convereter.html</guid>
        
        
        <category>binary</category>
        
        <category>algorithms</category>
        
      </item>
    
      <item>
        <title>Jaccard Similarity - Clustering for the rest of us!</title>
        <description>&lt;p&gt;Have you ever wondered how Facebook knows which post is similar to which?
If you have 2 or more friends posting the same link to an article, Facebook will intelligently
group these two articles into one single feed. Well, Facebook uses some sort of clustering algorithm and Jaccard is one of them.&lt;/p&gt;

&lt;p&gt;What is Jaccard Coefficient or Jaccard Similarity?
&lt;blockquote&gt;
    The Jaccard index, also known as the Jaccard similarity coefficient (originally coined coefficient de communauté by Paul Jaccard), is a statistic used for comparing the similarity and diversity of sample sets. The Jaccard coefficient measures similarity between finite sample sets, and is defined as the size of the intersection divided by the size of the union of the sample sets: J(A,B) = |A n B|/|A uB|.
    &lt;footer&gt;Source&lt;cite title=&quot;Source Title&quot;&gt;Wikepedia&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;I whiped out a small Python script to illustrate this point -&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;__future__&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;division&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Jaccard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args_ii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokenize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args_ii&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokenize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args_ii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args_ii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args_ii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;similarity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;intersect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intersect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intersect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;union&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;similarity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tokenize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;jaccard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Jaccard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I am Sam&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I am Sam, Sa is awesome. Sam is a genius&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;similarity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jaccard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;similarity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;similarity&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
    From the class above, I decided to break down into tiny bits - functions/methods.&lt;br&gt;&lt;br&gt;

    We are using two sentences here for our test.&lt;br&gt;
    1. We tokenize each sentence. We basically made them into sets.&lt;br&gt;
    2. We calculate the intesection of these sentences.&lt;br&gt;
    3. We calculate the union of the sentences.&lt;br&gt;
    4. We calculate the similarity which is basically the division of the intersection of both sets by its union.&lt;br&gt;

    Simple right? Jaccard only needs two variables, the union and intersection of both sets.
&lt;/p&gt;

&lt;p&gt;Similarity ranges between 1 and 0. Anything outside that is probably wrong :-).&lt;/p&gt;

&lt;p&gt;Why should you care?
&lt;ul&gt;
    &lt;li&gt;
        Ecommerce companies uses Jaccard Similarity to recommend items and deals to customer based on the purchases made by other customers. &lt;em&gt;(Disclaimer - I work for an eCommerce company)&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;
        This algorithm can be used to detect plagiarism.
    &lt;/li&gt;
    &lt;li&gt;
        Similar comments in an online forum can be grouped together.
    &lt;/li&gt;
    &lt;li&gt;
        Search engines use this same algorithm to group and sometimes discard similar search results.
    &lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Jun 2014 17:19:14 +0100</pubDate>
        <link>http://cyberomin.github.io/clustering/algorithms/2014/06/10/jaccard-coefficient.html</link>
        <guid isPermaLink="true">http://cyberomin.github.io/clustering/algorithms/2014/06/10/jaccard-coefficient.html</guid>
        
        
        <category>clustering</category>
        
        <category>algorithms</category>
        
      </item>
    
      <item>
        <title>Nerdiest Birthday Ever</title>
        <description>&lt;p&gt;So yesterday, May 9th, was my birthday and my good people at work made it really special.
Below are some of the nerdiest messages that I got. I just love my folks. They know how to make me smile.
Enjoy.&lt;/p&gt;

&lt;p&gt;Tega&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mktime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;happyBirthdayCelestine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Oladayo Raji&lt;br&gt;
&lt;pre&gt;Happy Birthday Bro. More Python to your brain&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;Abiola Ibrahim&lt;br&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Unix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1399622838&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Unix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1399709236&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Happy Birthday %s %s %n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Celestine&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Omin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Don&amp;#39;t ask me which Language.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Adeyemi Olaoye &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;BirthdayNotifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Happy Birthday Celestine&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;:D&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Oluwafemi Adeosun &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;Edit Rule&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt; equals celestine&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;TAG Rule 00110&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;Fire Rule on&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt; equals /\^birthday^/\&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Kaine Ugwu&lt;/b&gt; &lt;small&gt;James Gosling&amp;#39;s protege&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Happy Birthday [Celestine]&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Jacob Ayokunle&lt;/b&gt; &lt;small&gt;Who does code review again for Jacob :-)&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;if(today == May 9, 2014)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     Happy Birthday Celestine;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     Long Life and Prosperity&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Adeyemi Olaoye&lt;/b&gt; &lt;small&gt;Bug spotter.&lt;/small&gt;
&lt;pre&gt;
@Jacob
PHP Notice:
Syntax error on line 1. :D
&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;&lt;b&gt;Omoloro Oyegoke&lt;/b&gt; - &lt;small&gt;The Planner&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*TODO: Wish Celestine a very happy birthday in a cool geeky way Post-MVP&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*/&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo &amp;quot;Happy Birthday Obong&amp;quot;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Obasa Adegoke&lt;/strong&gt; &lt;small&gt;The Terminal god and earlang show-off&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;erlang&quot;&gt;&lt;span class=&quot;sc&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vim&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;happy_birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;erl&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% happy birthday program&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;happy_birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;export&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Happy Birthday BOSS!!!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;More Codes To Your Gloves. God Bless You&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;% :) :D&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Oyewale Oyediran&lt;/b&gt; &lt;small&gt;The Scalability buff&lt;/small&gt;
&lt;pre&gt;
Happy Birthday Master-chief.
I wish you very scalable birthdays with high-performance success in life.
&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;Yours truly&lt;br&gt;
&lt;b&gt;Celestine Omin&lt;/b&gt; &lt;small&gt;The Bash wannabe&lt;/small&gt; &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;date +%Y-%m-%d&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Thank You all. I love you $today and always.&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 10 May 2014 11:51:14 +0100</pubDate>
        <link>http://cyberomin.github.io/birthday/2014/05/10/nerdiest-birthday-ever.html</link>
        <guid isPermaLink="true">http://cyberomin.github.io/birthday/2014/05/10/nerdiest-birthday-ever.html</guid>
        
        
        <category>birthday</category>
        
      </item>
    
      <item>
        <title>!important</title>
        <description>&lt;p&gt;One of my primary task at my day job is sending out daily newsletter to our teeming customers. As with every other thing web, I have to test my letters across multiple clients: web, mobile and desktop/native.&lt;/p&gt;

&lt;p&gt;Google in its infinite wisdom decided to re-colour my links even down to plain text. If you have ever dealt with newsletters you will know that there isn’t so much flexibility - 600px max-width, inline CSS and loads of tables. Let’s not get started on mobile devices, that’s a post for another day.&lt;/p&gt;

&lt;p&gt;I spent days trying to figure out what I did or was doing wrong. Why can’t things like links be any simpler? Google why try to complicate my life? &lt;em&gt;Don’t be Evil&lt;/em&gt; - pun intended. Y!, Hotmail and co will render just fine, Google? No.&lt;/p&gt;

&lt;p&gt;We all have heard about the buzz phrase “best practices, right?” I have. That said, many scholars and “experts” will cuss and swear if you ever mentioned you  use(d) &lt;strong&gt;!important&lt;/strong&gt; in your style sheet. You are automatically labeled an outcast. &lt;/p&gt;

&lt;p&gt;Now here’s the thing, I work at a company that defies the status quo. We believe in done is better than perfect, with this in mind I threw away my best practices hat. I used &lt;strong&gt;!important&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#000&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;imprtant&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Boom, Google got the message. My letter now have a similar resemblance with my mock-ups. &lt;/p&gt;

&lt;p&gt;So, when next you are faced with these kinds of issues, bite the bullet and throw away the “best practices” hat. Become the rebel. Use &lt;b&gt;!important&lt;/b&gt;. :-)&lt;/p&gt;
</description>
        <pubDate>Tue, 06 May 2014 13:14:14 +0100</pubDate>
        <link>http://cyberomin.github.io/css/2014/05/06/important.html</link>
        <guid isPermaLink="true">http://cyberomin.github.io/css/2014/05/06/important.html</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Redis - Memcache on Steroids!</title>
        <description>&lt;p&gt;Redis - Redis is an open source, BSD licensed, advanced key-value store. Simple. I wouldn&amp;#39;t bother you too much.
Think about it as Memcached on steroids. Redis is &amp;#39;insanely fast.&amp;#39; - RAM is cheap these days.&lt;/p&gt;

&lt;p&gt;I've heard so many good things about this awesome systems, untill last two weeks I haven't done anything with it.
I was recently assigned the task of adding a caching layer to one of our internal tools and my boss specifically asked
I use Redis. I smiled at myself - alas, I'll play with Redis in production.&lt;/p&gt;

&lt;p&gt;Like I said earlier, Redis is a Key-Value store. Let's get our hands dirty.&lt;/p&gt;

&lt;p&gt;Setting and retrieving a value is straight forward.
&lt;pre&gt;
SET foo bar
GET foo 
&lt;em&gt;bar&lt;/em&gt;
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;It doesn&amp;#39;t get any simpler&lt;/p&gt;

&lt;p&gt;If you need to delete this data, simply pass the key as an argument to DEL&lt;/p&gt;

&lt;pre&gt;DEL foo.&lt;/pre&gt;

&lt;p&gt;Redis has tons of commands. You can find all of them here - &lt;a href='http://redis.com/commands'&gt;http://redis.com/commands&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since the bulk of the data I was going to be storing were timestamp bound it was important I work with a command
that support ranges and a sorted set was the best option. There are tons of sorted set commands but &lt;code&gt;ZRANGEBYSCORE&lt;/code&gt; was a perfect fit.&lt;/p&gt;

Task 1. Store users based on the date the registered on the site.

&lt;pre&gt;
ZADD &lt;key&gt; &lt;date&gt; &lt;email&gt;
Retrieving is simple:

ZRANGEBYSCORE &lt;key&gt; &lt;min date&gt; &lt;max date&gt;
&lt;key&gt; - A key that uniquely identified this operation. Think of the key as a table in a RDBMS
&lt;min date&gt; - Start date
&lt;max date&gt; - End date
&lt;/pre&gt;

&lt;p&gt;
Live example:
&lt;pre&gt;
ZADD users 20131001 Celestine:Omin:smartone@example.com
ZADD users 20131002 Mark:Cuban:smarttwo@example.com
ZRANGEBYSCORE users 20131001 20131002
&lt;em&gt;[Celestine:Omin:smartone@example.com, Mark:Cuban:smarttwo@example.com]&lt;/em&gt;
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;If I needed every single item in this without considering the date range, I could use&lt;/p&gt;

&lt;pre&gt;ZRANGEBYSCORE users -inf +inf&lt;/pre&gt;

&lt;p&gt;Where -inf and +inf are min and max respectively.
&lt;br&gt;&lt;br&gt;
&lt;em&gt;P/S &lt;code&gt;ZRANGEBYSCORE&lt;/code&gt; has a time complexity of O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;
</description>
        <pubDate>Mon, 05 May 2014 23:56:14 +0100</pubDate>
        <link>http://cyberomin.github.io/redis/scaling/2014/05/05/redis-memcache-on-steroids.html</link>
        <guid isPermaLink="true">http://cyberomin.github.io/redis/scaling/2014/05/05/redis-memcache-on-steroids.html</guid>
        
        
        <category>redis</category>
        
        <category>scaling</category>
        
      </item>
    
  </channel>
</rss>
